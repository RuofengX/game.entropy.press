"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import essence.service_pb2
import grpc
import grpc.aio
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class ContinuumStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Tick: grpc.UnaryUnaryMultiCallable[
        essence.service_pb2.TickRequest,
        essence.service_pb2.HistoryResult,
    ]
    """单个Tick，一次性发送/返回"""

class ContinuumAsyncStub:
    Tick: grpc.aio.UnaryUnaryMultiCallable[
        essence.service_pb2.TickRequest,
        essence.service_pb2.HistoryResult,
    ]
    """单个Tick，一次性发送/返回"""

class ContinuumServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Tick(
        self,
        request: essence.service_pb2.TickRequest,
        context: _ServicerContext,
    ) -> typing.Union[essence.service_pb2.HistoryResult, collections.abc.Awaitable[essence.service_pb2.HistoryResult]]:
        """单个Tick，一次性发送/返回"""

def add_ContinuumServicer_to_server(servicer: ContinuumServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
