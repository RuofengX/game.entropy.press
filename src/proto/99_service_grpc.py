# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: 99_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import 00_meta_pb2
import 99_service_pb2


class ContinuumBase(abc.ABC):

    @abc.abstractmethod
    async def TimePass(self, stream: 'grpclib.server.Stream[99_service_pb2.Request, 99_service_pb2.Result]') -> None:
        pass

    @abc.abstractmethod
    async def VelocityMove(self, stream: 'grpclib.server.Stream[99_service_pb2.Request, 99_service_pb2.Result]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/continuum.Continuum/TimePass': grpclib.const.Handler(
                self.TimePass,
                grpclib.const.Cardinality.UNARY_UNARY,
                99_service_pb2.Request,
                99_service_pb2.Result,
            ),
            '/continuum.Continuum/VelocityMove': grpclib.const.Handler(
                self.VelocityMove,
                grpclib.const.Cardinality.UNARY_UNARY,
                99_service_pb2.Request,
                99_service_pb2.Result,
            ),
        }


class ContinuumStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.TimePass = grpclib.client.UnaryUnaryMethod(
            channel,
            '/continuum.Continuum/TimePass',
            99_service_pb2.Request,
            99_service_pb2.Result,
        )
        self.VelocityMove = grpclib.client.UnaryUnaryMethod(
            channel,
            '/continuum.Continuum/VelocityMove',
            99_service_pb2.Request,
            99_service_pb2.Result,
        )
